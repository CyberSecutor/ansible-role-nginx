# {{ ansible_managed }}

{% for server in nginx_vhosts[item] %}
{% set server_name = server.server_name if server.server_name is string else server.server_name | first %}

server {
{% if server.listen is defined %}
    listen {{ server.listen }};
{% endif %}
{% if server.listen_ipv6 is defined %}
    listen {{ server.listen_ipv6 }};
{% endif %}
{% if server.server_name is defined %}
    server_name {{ server.server_name if server.server_name is string else server.server_name | join(' ') }};
{% endif %}
{% if server.root is defined %}
    root {{ server.root }};
{% endif %}
{% if server.access_log is defined %}
    access_log {{ server.access_log }};
{% endif %}
{% if server.error_log is defined %}
    error_log {{ server.error_log }};
{% endif %}

{% if server.ssl_certificate is defined and server.ssl_certificate_key is defined %}
    # SSL
    ssl                         {{ server.ssl | default('on') }};
    ssl_certificate             {{ server.ssl_certificate }};
    ssl_certificate_key         {{ server.ssl_certificate_key }};

    ssl_session_cache           {{ server.ssl_session_cache | default('shared:SSL:20m') }};
    ssl_session_timeout         {{ server.ssl_session_timeout | default('10m') }};
    ssl_protocols               {{ server.ssl_protocols | default('TLSv1.1 TLSv1.2') }};
    ssl_prefer_server_ciphers   {{ server.ssl_prefer_server_ciphers | default('on') }};
    ssl_ciphers                 {{ server.ssl_ciphers | default('ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5') }};

    ssl_stapling                {{ server.ssl_stapling | default('on') }};
    ssl_stapling_verify         {{ server.ssl_stapling_verify | default('on') }};
    ssl_trusted_certificate     {{ server.ssl_trusted_certificate if server.ssl_trusted_certificate is defined else server.ssl_certificate | replace('certificate.crt', 'trustchain.crt') }};
    resolver                    {{ server.resolver | default('8.8.8.8 8.8.4.4') }};

{% endif %}
{% if server.ssl_offload_proxy is defined %}
    location / {

        set $ssl_offloaded_header "";
        set $ssl_https_header "";

        if ($scheme = "https") {
            set $ssl_offloaded_header "1";
            set $ssl_https_header "on";
        }

        proxy_pass {{ server.ssl_offload_proxy }};
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header HTTPS $ssl_https_header;
        proxy_set_header Ssl-Offloaded $ssl_offloaded_header;
        #proxy_hide_header X-Varnish;
        #proxy_hide_header Via;
    }
{% endif %}
{% if server.extra_parameters is defined %}
    {{ server.extra_parameters }}
{% endif %}
{% if server.return is defined %}
    return {{ server.return }}
{% endif %}
}


{% endfor %}